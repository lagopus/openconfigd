diff -cr bash-4.4/bashline.c bash-4.4-cli/bashline.c
*** bash-4.4/bashline.c	2016-08-05 18:44:05.000000000 -0700
--- bash-4.4-cli/bashline.c	2017-05-05 08:29:18.330877079 -0700
***************
*** 1317,1322 ****
--- 1317,1324 ----
    /* Flags == SD_NOJMP only because we want to skip over command substitutions
       in assignment statements.  Have to test whether this affects `standalone'
       command substitutions as individual words. */
+   if (!cli_mode ())
+     {
    while (((s = skip_to_delim (rl_line_buffer, os, COMMAND_SEPARATORS, SD_NOJMP|SD_COMPLETE/*|SD_NOSKIPCMD*/)) <= start) &&
  	 rl_line_buffer[s])
      {
***************
*** 1331,1336 ****
--- 1333,1339 ----
  	}
        os = s+1;
      }
+     }
    return os;
  }
  
***************
*** 1340,1346 ****
  {
    register int e;
  
!   e = skip_to_delim (rl_line_buffer, end, COMMAND_SEPARATORS, SD_NOJMP|SD_COMPLETE);
    return e;
  }
  
--- 1343,1352 ----
  {
    register int e;
  
!   if (!cli_mode ())
!     e = skip_to_delim (rl_line_buffer, end, COMMAND_SEPARATORS, SD_NOJMP|SD_COMPLETE);
!   else
! 	e = strlen(rl_line_buffer);
    return e;
  }
  
***************
*** 1471,1477 ****
      }
    else if (member (rl_line_buffer[ti], command_separator_chars))
      {
!       in_command_position++;
  
        if (check_redir (ti) == 1)
  	in_command_position = 0;
--- 1477,1484 ----
      }
    else if (member (rl_line_buffer[ti], command_separator_chars))
      {
!       if (!cli_mode())
!         in_command_position++;
  
        if (check_redir (ti) == 1)
  	in_command_position = 0;
***************
*** 1501,1514 ****
       succeed.  Don't bother if readline found a single quote and we are
       completing on the substring.  */
    if (*text == '`' && rl_completion_quote_character != '\'' &&
! 	(in_command_position || (unclosed_pair (rl_line_buffer, start, "`") &&
! 				 unclosed_pair (rl_line_buffer, end, "`"))))
      matches = rl_completion_matches (text, command_subst_completion_function);
  
  #if defined (PROGRAMMABLE_COMPLETION)
    /* Attempt programmable completion. */
    have_progcomps = prog_completion_enabled && (progcomp_size () > 0);
!   if (matches == 0 && (in_command_position == 0 || text[0] == '\0') &&
        current_prompt_string == ps1_prompt)
      {
        int s, e, s1, e1, os, foundcs;
--- 1508,1522 ----
       succeed.  Don't bother if readline found a single quote and we are
       completing on the substring.  */
    if (*text == '`' && rl_completion_quote_character != '\'' &&
!       !cli_mode () &&
!       (in_command_position || (unclosed_pair (rl_line_buffer, start, "`") &&
!                                unclosed_pair (rl_line_buffer, end, "`"))))
      matches = rl_completion_matches (text, command_subst_completion_function);
  
  #if defined (PROGRAMMABLE_COMPLETION)
    /* Attempt programmable completion. */
    have_progcomps = prog_completion_enabled && (progcomp_size () > 0);
!   if (matches == 0 && (cli_mode () || in_command_position == 0 || text[0] == '\0') &&
        current_prompt_string == ps1_prompt)
      {
        int s, e, s1, e1, os, foundcs;
***************
*** 1565,1570 ****
--- 1573,1584 ----
          prog_complete_matches = programmable_completions ("_EmptycmD_", text, s, e, &foundcs);
        else if (start == end && text[0] == '\0' && s1 > start && whitespace (rl_line_buffer[start]))
          foundcs = 0;		/* whitespace before command name */
+       else if (cli_mode () && (e > s || strcmp (n, text) == 0) && was_assignment == 0 && have_progcomps)
+         {
+           prog_complete_matches = programmable_completions (n, text, s, e, &foundcs);
+           /* command completion if programmable completion fails */
+           in_command_position = s == start && STREQ (n, text);	/* XXX */
+         }
        else if (e > s && was_assignment == 0 && e1 == end && rl_line_buffer[e] == 0 && whitespace (rl_line_buffer[e-1]) == 0)
  	{
  	  /* not assignment statement, but still want to perform command
***************
*** 1638,1643 ****
--- 1652,1663 ----
  
    matches = (char **)NULL;
  
+   if (cli_mode ())
+     {
+       rl_ignore_some_completions_function = bash_ignore_everything;
+       return matches;
+     }
+   
    /* New posix-style command substitution or variable name? */
    if (!matches && *text == '$')
      {
diff -cr bash-4.4/Makefile.in bash-4.4-cli/Makefile.in
*** bash-4.4/Makefile.in	2016-01-15 05:55:37.000000000 -0800
--- bash-4.4-cli/Makefile.in	2017-05-05 08:31:52.591319422 -0700
***************
*** 102,111 ****
  OBJEXT = @OBJEXT@
  
  # The name of this program and some version information.
! VERSPROG = bashversion$(EXEEXT)
! VERSOBJ = bashversion.$(OBJEXT)
  
! Program = bash$(EXEEXT)
  Version = @BASHVERS@
  PatchLevel = `$(BUILD_DIR)/$(VERSPROG) -p`
  RELSTATUS = @RELSTATUS@
--- 102,111 ----
  OBJEXT = @OBJEXT@
  
  # The name of this program and some version information.
! VERSPROG = cliversion$(EXEEXT)
! VERSOBJ = cliversion.$(OBJEXT)
  
! Program = cli$(EXEEXT)
  Version = @BASHVERS@
  PatchLevel = `$(BUILD_DIR)/$(VERSPROG) -p`
  RELSTATUS = @RELSTATUS@
***************
*** 431,437 ****
  	   input.c bashhist.c array.c arrayfunc.c assoc.c sig.c pathexp.c \
  	   unwind_prot.c siglist.c bashline.c bracecomp.c error.c \
  	   list.c stringlib.c locale.c findcmd.c redir.c \
! 	   pcomplete.c pcomplib.c syntax.c xmalloc.c
  
  HSOURCES = shell.h flags.h trap.h hashcmd.h hashlib.h jobs.h builtins.h \
  	   general.h variables.h config.h $(ALLOC_HEADERS) alias.h \
--- 431,438 ----
  	   input.c bashhist.c array.c arrayfunc.c assoc.c sig.c pathexp.c \
  	   unwind_prot.c siglist.c bashline.c bracecomp.c error.c \
  	   list.c stringlib.c locale.c findcmd.c redir.c \
! 	   pcomplete.c pcomplib.c syntax.c xmalloc.c \
! 	   cli.c
  
  HSOURCES = shell.h flags.h trap.h hashcmd.h hashlib.h jobs.h builtins.h \
  	   general.h variables.h config.h $(ALLOC_HEADERS) alias.h \
***************
*** 440,445 ****
--- 441,447 ----
  	   subst.h externs.h siglist.h bashhist.h bashline.h bashtypes.h \
  	   array.h arrayfunc.h sig.h mailcheck.h bashintl.h bashjmp.h \
  	   execute_cmd.h parser.h pathexp.h pathnames.h pcomplete.h assoc.h \
+ 	   cli.h \
  	   $(BASHINCFILES)
  
  SOURCES	 = $(CSOURCES) $(HSOURCES) $(BUILTIN_DEFS)
***************
*** 472,478 ****
  	   trap.o input.o unwind_prot.o pathexp.o sig.o test.o version.o \
  	   alias.o array.o arrayfunc.o assoc.o braces.o bracecomp.o bashhist.o \
  	   bashline.o $(SIGLIST_O) list.o stringlib.o locale.o findcmd.o redir.o \
! 	   pcomplete.o pcomplib.o syntax.o xmalloc.o $(SIGNAMES_O)
  
  # Where the source code of the shell builtins resides.
  BUILTIN_SRCDIR=$(srcdir)/builtins
--- 474,481 ----
  	   trap.o input.o unwind_prot.o pathexp.o sig.o test.o version.o \
  	   alias.o array.o arrayfunc.o assoc.o braces.o bracecomp.o bashhist.o \
  	   bashline.o $(SIGLIST_O) list.o stringlib.o locale.o findcmd.o redir.o \
! 	   pcomplete.o pcomplib.o syntax.o xmalloc.o $(SIGNAMES_O) \
! 	   cli.o
  
  # Where the source code of the shell builtins resides.
  BUILTIN_SRCDIR=$(srcdir)/builtins
***************
*** 525,532 ****
  BUILTINS_DEP = $(BUILTINS_LIBRARY)
  
  # Documentation for the shell.
! DOCSRC = $(srcdir)/doc
! DOCDIR = $(dot)/doc
  
  # Translations and other i18n support files
  PO_SRC = $(srcdir)/po/
--- 528,535 ----
  BUILTINS_DEP = $(BUILTINS_LIBRARY)
  
  # Documentation for the shell.
! # DOCSRC = $(srcdir)/doc
! # DOCDIR = $(dot)/doc
  
  # Translations and other i18n support files
  PO_SRC = $(srcdir)/po/
***************
*** 546,552 ****
  		  buildversion.o mksignames.o signames.o buildsignames.o
  CREATED_CONFIGURE = config.h config.cache config.status config.log \
  		    stamp-h po/POTFILES config.status.lineno
! CREATED_MAKEFILES = Makefile builtins/Makefile doc/Makefile \
  		    lib/readline/Makefile lib/glob/Makefile \
  		    lib/sh/Makefile lib/tilde/Makefile lib/malloc/Makefile \
  		    lib/termcap/Makefile examples/loadables/Makefile \
--- 549,555 ----
  		  buildversion.o mksignames.o signames.o buildsignames.o
  CREATED_CONFIGURE = config.h config.cache config.status config.log \
  		    stamp-h po/POTFILES config.status.lineno
! CREATED_MAKEFILES = Makefile builtins/Makefile \
  		    lib/readline/Makefile lib/glob/Makefile \
  		    lib/sh/Makefile lib/tilde/Makefile lib/malloc/Makefile \
  		    lib/termcap/Makefile examples/loadables/Makefile \
***************
*** 565,571 ****
  # Keep GNU Make from exporting the entire environment for small machines.
  .NOEXPORT:
  
! .made: $(Program) bashbug $(SDIR)/man2html$(EXEEXT)
  	@echo "$(Program) last made for a $(Machine) running $(OS)" >.made
  
  $(Program):  .build $(OBJECTS) $(BUILTINS_DEP) $(LIBDEP)
--- 568,574 ----
  # Keep GNU Make from exporting the entire environment for small machines.
  .NOEXPORT:
  
! .made: $(Program)
  	@echo "$(Program) last made for a $(Machine) running $(OS)" >.made
  
  $(Program):  .build $(OBJECTS) $(BUILTINS_DEP) $(LIBDEP)
***************
*** 583,596 ****
  	@echo "	  ***********************************************************"
  	@echo
  
- bashbug: $(SUPPORT_SRC)bashbug.sh config.h Makefile $(VERSPROG)
- 	@sed -e "s%!MACHINE!%$(Machine)%" -e "s%!OS!%$(OS)%" \
- 	     -e "s%!CFLAGS!%$(CCFLAGS)%" -e "s%!CC!%$(CC)%" \
- 	     -e "s%!RELEASE!%$(Version)%" -e "s%!PATCHLEVEL!%$(PatchLevel)%" \
- 	     -e "s%!MACHTYPE!%$(MACHTYPE)%" -e "s%!RELSTATUS!%$(RELSTATUS)%" \
- 	     $(SUPPORT_SRC)bashbug.sh > $@
- 	@chmod a+rx bashbug
- 
  strip:	$(Program) .made
  	strip $(Program)
  	ls -l $(Program)
--- 586,591 ----
***************
*** 603,609 ****
  	$(SHELL) $(SUPPORT_SRC)mkversion.sh -b -S ${topdir} -s $(RELSTATUS) -d $(Version) -o newversion.h \
  		&& mv newversion.h version.h
  
! bashversion$(EXEEXT):	patchlevel.h conftypes.h version.h buildversion.o $(SUPPORT_SRC)bashversion.c
  	$(CC_FOR_BUILD) $(CCFLAGS_FOR_BUILD) ${LDFLAGS_FOR_BUILD} -o $@ $(SUPPORT_SRC)bashversion.c buildversion.o ${LIBS_FOR_BUILD}
  
  buildversion.o: version.h conftypes.h patchlevel.h $(srcdir)/version.c
--- 598,604 ----
  	$(SHELL) $(SUPPORT_SRC)mkversion.sh -b -S ${topdir} -s $(RELSTATUS) -d $(Version) -o newversion.h \
  		&& mv newversion.h version.h
  
! cliversion$(EXEEXT):	patchlevel.h conftypes.h version.h buildversion.o $(SUPPORT_SRC)bashversion.c
  	$(CC_FOR_BUILD) $(CCFLAGS_FOR_BUILD) ${LDFLAGS_FOR_BUILD} -o $@ $(SUPPORT_SRC)bashversion.c buildversion.o ${LIBS_FOR_BUILD}
  
  buildversion.o: version.h conftypes.h patchlevel.h $(srcdir)/version.c
***************
*** 784,805 ****
  
  installdirs:
  	@${SHELL} $(SUPPORT_SRC)mkinstalldirs $(DESTDIR)$(bindir)
- 	@${SHELL} $(SUPPORT_SRC)mkinstalldirs $(DESTDIR)$(man1dir)
- 	@${SHELL} $(SUPPORT_SRC)mkinstalldirs $(DESTDIR)$(infodir)
- 	@${SHELL} $(SUPPORT_SRC)mkinstalldirs $(DESTDIR)$(docdir)
- 	-( cd $(PO_DIR) ; $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) $@ )
  
  install:	.made installdirs
  	$(INSTALL_PROGRAM) $(INSTALLMODE) $(Program) $(DESTDIR)$(bindir)/$(Program)
- 	$(INSTALL_SCRIPT) $(INSTALLMODE2) bashbug $(DESTDIR)$(bindir)/bashbug
- 	$(INSTALL_DATA) $(OTHER_DOCS) $(DESTDIR)$(docdir)
- 	-( cd $(DOCDIR) ; $(MAKE) $(MFLAGS) \
- 		man1dir=$(man1dir) man1ext=$(man1ext) \
- 		man3dir=$(man3dir) man3ext=$(man3ext) \
- 		infodir=$(infodir) htmldir=$(htmldir) DESTDIR=$(DESTDIR) $@ )
- 	-( cd $(DEFDIR) ; $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) $@ )
- 	-( cd $(PO_DIR) ; $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) $@ )
- 	-( cd $(LOADABLES_DIR) && $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) $@ )
  
  install-strip:
  	$(MAKE) $(MFLAGS) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' \
--- 779,787 ----
***************
*** 835,848 ****
  	-( $(RM) $(DESTDIR)$(libdir)/pkgconfig/bash.pc )
  
  uninstall:	.made
! 	$(RM) $(DESTDIR)$(bindir)/$(Program) $(DESTDIR)$(bindir)/bashbug
! 	-( cd $(DESTDIR)$(docdir) && ${RM} ${OTHER_INSTALLED_DOCS} )
! 	-( cd $(DOCDIR) ; $(MAKE) $(MFLAGS) \
! 		man1dir=$(man1dir) man1ext=$(man1ext) \
! 		man3dir=$(man3dir) man3ext=$(man3ext) \
! 		infodir=$(infodir) htmldir=$(htmldir) DESTDIR=$(DESTDIR) $@ )
! 	-( cd $(PO_DIR) ; $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) $@ )
! 	-( cd $(LOADABLES_DIR) && $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) $@ )
  
  .PHONY: basic-clean clean realclean maintainer-clean distclean mostlyclean maybe-clean
  
--- 817,823 ----
  	-( $(RM) $(DESTDIR)$(libdir)/pkgconfig/bash.pc )
  
  uninstall:	.made
! 	$(RM) $(DESTDIR)$(bindir)/$(Program)
  
  .PHONY: basic-clean clean realclean maintainer-clean distclean mostlyclean maybe-clean
  
***************
*** 850,860 ****
  		${INTL_LIBDIR} ${TILDE_LIBDIR} ${ALLOC_LIBDIR} ${SH_LIBDIR}
  
  basic-clean:
! 	$(RM) $(OBJECTS) $(Program) bashbug
  	$(RM) .build .made version.h 
  
  clean:	basic-clean
- 	( cd $(DOCDIR) && $(MAKE) $(MFLAGS) $@ )
  	( cd builtins && $(MAKE) $(MFLAGS) $@ )
  	-( cd $(SDIR) && $(MAKE) $(MFLAGS) $@ )
  	-for libdir in ${LIB_SUBDIRS}; do \
--- 825,834 ----
  		${INTL_LIBDIR} ${TILDE_LIBDIR} ${ALLOC_LIBDIR} ${SH_LIBDIR}
  
  basic-clean:
! 	$(RM) $(OBJECTS) $(Program)
  	$(RM) .build .made version.h 
  
  clean:	basic-clean
  	( cd builtins && $(MAKE) $(MFLAGS) $@ )
  	-( cd $(SDIR) && $(MAKE) $(MFLAGS) $@ )
  	-for libdir in ${LIB_SUBDIRS}; do \
***************
*** 1229,1234 ****
--- 1203,1209 ----
  bashline.o: $(DEFSRC)/common.h $(GLOB_LIBSRC)/glob.h alias.h
  bashline.o: pcomplete.h ${BASHINCDIR}/chartypes.h input.h
  bashline.o: ${BASHINCDIR}/shmbutil.h ${BASHINCDIR}/shmbchar.h
+ bashline.o: cli.h
  bracecomp.o: config.h bashansi.h ${BASHINCDIR}/ansi_stdlib.h
  bracecomp.o: shell.h syntax.h config.h bashjmp.h ${BASHINCDIR}/posixjmp.h
  bracecomp.o: command.h ${BASHINCDIR}/stdc.h error.h
***************
*** 1295,1300 ****
--- 1270,1277 ----
  
  signames.o: config.h bashansi.h ${BASHINCDIR}/ansi_stdlib.h
  
+ cli.o: cli.h
+ 
  # XXX - dependencies checked through here
  
  # builtin c sources
